<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sessions-rsses on Northern Ireland Developer Conference</title>
    <link>http://www.nidevconf.com/sessions/index.xml</link>
    <description>Recent content in Sessions-rsses on Northern Ireland Developer Conference</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Mar 2015 16:03:09 -0400</lastBuildDate>
    <atom:link href="http://www.nidevconf.com/sessions/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mark Allan</title>
      <link>http://www.nidevconf.com/sessions/markallan/</link>
      <pubDate>Sat, 21 Mar 2015 16:03:09 -0400</pubDate>
      
      <guid>http://www.nidevconf.com/sessions/markallan/</guid>
      <description>&lt;p&gt;The goroutines and channels of golang have roots in Communicating Sequential Processes by C.A.R.Hoare (1978). Golang idioms and common usage tend to neglect some interesting channel and process based constructs. This talk starts by taking a look at some CSP and Pi-Calculus related papers, then explores two applications structured to use channels and goroutines intensively.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>